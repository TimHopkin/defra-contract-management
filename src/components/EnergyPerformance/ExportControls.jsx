import React, { useState } from 'react';
import { exportEPCToCSV } from '../../lib/epcService';

const ExportControls = ({ epcData, summary, onExport }) => {
  const [isExporting, setIsExporting] = useState(false);
  const [exportFormat, setExportFormat] = useState('csv');

  const handleExport = async (format) => {
    setIsExporting(true);
    
    try {
      switch (format) {
        case 'csv':
          await exportToCSV();
          break;
        case 'summary':
          await exportSummaryReport();
          break;
        default:
          console.warn('Unknown export format:', format);
      }
    } catch (error) {
      console.error('Export failed:', error);
      alert('Export failed. Please try again.');
    } finally {
      setIsExporting(false);
    }
  };

  const exportToCSV = async () => {
    if (!epcData?.matches) return;
    
    const csvContent = exportEPCToCSV(epcData.matches);
    downloadFile(csvContent, `epc-data-${new Date().toISOString().split('T')[0]}.csv`, 'text/csv');
    
    if (onExport) {
      onExport('csv', epcData.matches.length);
    }
  };

  const exportSummaryReport = async () => {
    if (!summary) return;
    
    const reportContent = generateSummaryReport();
    downloadFile(reportContent, `epc-summary-${new Date().toISOString().split('T')[0]}.txt`, 'text/plain');
    
    if (onExport) {
      onExport('summary', 1);
    }
  };

  const generateSummaryReport = () => {
    const date = new Date().toLocaleDateString();
    
    return `Energy Performance Certificate Summary Report
Generated: ${date}

OVERVIEW
========
Total Buildings: ${summary.totalBuildings?.toLocaleString() || 0}
Buildings with EPC: ${summary.withEPC?.toLocaleString() || 0}
Coverage Percentage: ${summary.coveragePercent || 0}%
Average Efficiency Score: ${summary.averageEfficiency || 0}/100
Average CO2 Emissions: ${summary.averageCO2 || 0} tonnes/year
Certificates Expiring Soon: ${summary.expiringCertificates || 0}

ENERGY RATING DISTRIBUTION
===========================
Rating A (Very Efficient): ${summary.ratingDistribution?.A || 0} buildings
Rating B (Efficient): ${summary.ratingDistribution?.B || 0} buildings
Rating C (Fairly Efficient): ${summary.ratingDistribution?.C || 0} buildings
Rating D (Standard): ${summary.ratingDistribution?.D || 0} buildings
Rating E (Below Standard): ${summary.ratingDistribution?.E || 0} buildings
Rating F (Poor): ${summary.ratingDistribution?.F || 0} buildings
Rating G (Very Poor): ${summary.ratingDistribution?.G || 0} buildings

PROPERTY TYPES
==============
${Object.entries(summary.propertyTypes || {})
  .map(([type, count]) => `${type}: ${count} buildings`)
  .join('\n')}

MATCH QUALITY
=============
${Object.entries(summary.matchMethods || {})
  .map(([method, count]) => `${method.toUpperCase().replace('_', ' ')} matches: ${count}`)
  .join('\n')}

This report was generated by the DEFRA Contract Management Database Energy Performance Module.
Data source: EPC Open Data Communities API (https://epc.opendatacommunities.org)
`;
  };

  const downloadFile = (content, filename, mimeType) => {
    const blob = new Blob([content], { type: `${mimeType};charset=utf-8;` });
    const link = document.createElement('a');
    const url = URL.createObjectURL(blob);
    link.setAttribute('href', url);
    link.setAttribute('download', filename);
    link.style.visibility = 'hidden';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  const ExportButton = ({ format, title, description, icon, disabled = false }) => (
    <button
      onClick={() => handleExport(format)}
      disabled={disabled || isExporting}
      className="relative group bg-white p-4 rounded-lg border border-gray-200 hover:border-indigo-300 hover:shadow-md transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
    >
      <div className="flex items-center space-x-3">
        <div className="flex-shrink-0">
          <div className="w-10 h-10 bg-indigo-100 rounded-lg flex items-center justify-center group-hover:bg-indigo-200 transition-colors">
            {icon}
          </div>
        </div>
        <div className="flex-1 min-w-0 text-left">
          <p className="text-sm font-medium text-gray-900">{title}</p>
          <p className="text-sm text-gray-500">{description}</p>
        </div>
        <div className="flex-shrink-0">
          {isExporting ? (
            <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-indigo-600"></div>
          ) : (
            <svg className="w-4 h-4 text-gray-400 group-hover:text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
          )}
        </div>
      </div>
    </button>
  );

  const hasData = epcData?.matches && epcData.matches.length > 0;

  return (
    <div className="bg-white rounded-lg shadow p-6">
      <div className="mb-6">
        <h3 className="text-lg font-medium text-gray-900 mb-2">Export Data</h3>
        <p className="text-sm text-gray-600">
          Download energy performance data and reports in various formats
        </p>
      </div>

      <div className="space-y-4">
        <ExportButton
          format="csv"
          title="Detailed Data (CSV)"
          description={`Export all ${epcData?.matches?.length || 0} buildings with complete EPC data`}
          disabled={!hasData}
          icon={
            <svg className="w-5 h-5 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
          }
        />

        <ExportButton
          format="summary"
          title="Summary Report (TXT)"
          description="Generate a text-based summary report with key statistics"
          disabled={!summary}
          icon={
            <svg className="w-5 h-5 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 17v-2m3 2v-4m3 4v-6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
          }
        />
      </div>

      {!hasData && (
        <div className="mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-md">
          <div className="flex">
            <svg className="h-5 w-5 text-yellow-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
            <div className="ml-3">
              <h3 className="text-sm font-medium text-yellow-800">No Data Available</h3>
              <p className="text-sm text-yellow-700 mt-1">
                Load building data first to enable exports.
              </p>
            </div>
          </div>
        </div>
      )}

      {hasData && (
        <div className="mt-4 p-3 bg-blue-50 border border-blue-200 rounded-md">
          <div className="flex">
            <svg className="h-5 w-5 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <div className="ml-3">
              <h3 className="text-sm font-medium text-blue-800">Export Information</h3>
              <p className="text-sm text-blue-700 mt-1">
                All exports include building identifiers, energy ratings, efficiency scores, 
                CO2 emissions, and match quality information.
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ExportControls;